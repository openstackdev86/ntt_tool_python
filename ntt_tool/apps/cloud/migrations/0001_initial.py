# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-05 06:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cloud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('keystone_auth_url', models.CharField(max_length=2083)),
                ('keystone_user', models.CharField(max_length=100)),
                ('keystone_password', models.CharField(max_length=250)),
                ('keystone_tenant_name', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cloud_details',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_id', models.CharField(max_length=255)),
                ('network_name', models.CharField(max_length=255)),
                ('shared', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=25)),
                ('is_dirty', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cloud_tenant_networks',
            },
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('router_id', models.CharField(max_length=255)),
                ('router_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=25)),
                ('is_dirty', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cloud_tenant_routers',
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subnet_id', models.CharField(max_length=255)),
                ('subnet_name', models.CharField(max_length=255)),
                ('cidr', models.CharField(max_length=255)),
                ('allocation_pool_start', models.GenericIPAddressField(blank=True, null=True)),
                ('allocation_pool_end', models.GenericIPAddressField(blank=True, null=True)),
                ('allocation_pool_start_selected', models.GenericIPAddressField(blank=True, null=True)),
                ('allocation_pool_end_selected', models.GenericIPAddressField(blank=True, null=True)),
                ('is_dirty', models.BooleanField(default=False)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subnets', to='cloud.Network')),
            ],
            options={
                'db_table': 'cloud_tenant_network_subnets',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.CharField(max_length=100)),
                ('tenant_name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('is_dirty', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('cloud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenants', to='cloud.Cloud')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cloud_tenants',
            },
        ),
        migrations.CreateModel(
            name='Traffic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('allowed_delta_percentage', models.FloatField()),
                ('test_result_path', models.CharField(max_length=250)),
                ('number_of_workers', models.IntegerField()),
                ('remote_user', models.CharField(max_length=100)),
                ('remote_pass', models.CharField(max_length=100)),
                ('test_method', models.CharField(max_length=100)),
                ('iperf_duration', models.IntegerField()),
                ('test_type', models.CharField(choices=[('all', 'All'), ('intra-tenant', 'Intra Tenant'), ('inter-tenant', 'Inter Tenant'), ('south-north', 'South to North'), ('north-south', 'North to South')], default='all', max_length=20)),
                ('external_host', models.CharField(blank=True, max_length=100, null=True)),
                ('ssh_gateway', models.CharField(blank=True, max_length=100, null=True)),
                ('test_environment', models.CharField(choices=[('dev', 'Development/Test'), ('prod', 'Production')], default='dev', max_length=20)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('cloud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cloud_traffic', to='cloud.Cloud')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cloud_traffic',
            },
        ),
        migrations.CreateModel(
            name='TrafficNetworksMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_range_start', models.TextField(max_length=15)),
                ('ip_range_end', models.TextField(max_length=15)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloud.Network')),
                ('traffic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloud.Traffic')),
            ],
        ),
        migrations.AddField(
            model_name='traffic',
            name='selected_networks',
            field=models.ManyToManyField(blank=True, through='cloud.TrafficNetworksMap', to='cloud.Network'),
        ),
        migrations.AddField(
            model_name='traffic',
            name='tenants',
            field=models.ManyToManyField(blank=True, to='cloud.Tenant'),
        ),
        migrations.AddField(
            model_name='router',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routers', to='cloud.Tenant'),
        ),
        migrations.AddField(
            model_name='network',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='cloud.Tenant'),
        ),
    ]
